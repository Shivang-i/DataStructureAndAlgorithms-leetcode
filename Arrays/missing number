//gfg-Given an array arr[] of size n-1 containing distinct integers from 1 to n, find the missing number in the range 1 to n.

//approch 1


class Solution {
    int missingNum(int arr[]) {
        // Sort the array to check numbers in order
        Arrays.sort(arr);

        // Loop through and check where the sequence breaks
        for (int i = 1; i <= arr.length; i++) {
            if (arr[i - 1] != i) {
                return i; // Found the missing number
            }
        }

        // If no mismatch was found, the missing number is n+1
        return arr.length + 1;
    }
}


// Approch 2
class Solution {
    int missingNum(int arr[]) {
        // 'n' is the total number of elements expected (array size + 1)
        int n = arr.length + 1;

        // Create a hash array to mark the presence of numbers
        // We take size n+1 so indices go from 0 to n, but we will use only 1..n
        int[] hash = new int[n + 1];

        // Mark all numbers that are present in the input array
        for (int i = 0; i < n - 1; i++) {
            hash[arr[i]]++;
        }

        // The index which remains 0 in hash is the missing number
        for (int i = 1; i <= n; i++) {
            if (hash[i] == 0) {
                return i;  // Found the missing number
            }
        }

        // This line will theoretically never execute if input is valid,
        // but we add it for completeness (to handle unexpected input)
        return -1;
    }
}

