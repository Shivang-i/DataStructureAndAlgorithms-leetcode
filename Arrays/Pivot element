//equilibrium in an array
//leetcode-724

class Solution {

    // Objective: 
    // This class provides a solution to find the "pivot index" in an integer array.
    // The pivot index is the index where the sum of the numbers on the left 
    // is equal to the sum of the numbers on the right.

    // Method to calculate the total sum of elements in the array
    public int totalSum(int[] nums){
        int sum = 0;
        // Iterate through the array and sum all elements
        for(int i : nums){
            sum += i;
        }
        return sum; // Return the total sum
    }

    // Method to find the pivot index of the array
    public int pivotIndex(int[] nums) {
        int total = totalSum(nums); // Calculate the total sum of the array
        int leftSum = 0;            // Initialize left sum to 0
        int rightSum = 0;           // Initialize right sum (will be calculated dynamically)

        // Iterate through each element to check if it can be a pivot
        for(int i = 0; i < nums.length; i++){
            // Calculate right sum by subtracting left sum and current element from total
            rightSum = total - leftSum - nums[i];

            // If left sum equals right sum, current index is the pivot index
            if(leftSum == rightSum)
                return i;

            // Update left sum to include current element for next iteration
            leftSum += nums[i];
        }

        // If no pivot index found, return -1
        return -1;
    }
}
